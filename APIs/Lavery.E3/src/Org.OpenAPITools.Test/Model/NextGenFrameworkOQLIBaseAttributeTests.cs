/*
 * 3E API
 *
 * The 3E Public API provides a powerful and convenient Web Services API for interacting with the 3E platform. The 3E API endpoints are a common integration point to allow programmatic interaction with the 3E business logic and data.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing NextGenFrameworkOQLIBaseAttribute
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class NextGenFrameworkOQLIBaseAttributeTests
    {
        // TODO uncomment below to declare an instance variable for NextGenFrameworkOQLIBaseAttribute
        //private NextGenFrameworkOQLIBaseAttribute instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of NextGenFrameworkOQLIBaseAttribute
            //instance = new NextGenFrameworkOQLIBaseAttribute();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of NextGenFrameworkOQLIBaseAttribute
        /// </summary>
        [Test]
        public void NextGenFrameworkOQLIBaseAttributeInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" NextGenFrameworkOQLIBaseAttribute
            //Assert.IsInstanceOf(typeof(NextGenFrameworkOQLIBaseAttribute), instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Owner'
        /// </summary>
        [Test]
        public void OwnerTest()
        {
            // TODO unit test for the property 'Owner'
        }
        /// <summary>
        /// Test the property 'IsRequired'
        /// </summary>
        [Test]
        public void IsRequiredTest()
        {
            // TODO unit test for the property 'IsRequired'
        }
        /// <summary>
        /// Test the property 'DataType'
        /// </summary>
        [Test]
        public void DataTypeTest()
        {
            // TODO unit test for the property 'DataType'
        }
        /// <summary>
        /// Test the property 'DefaultValue'
        /// </summary>
        [Test]
        public void DefaultValueTest()
        {
            // TODO unit test for the property 'DefaultValue'
        }
        /// <summary>
        /// Test the property 'SourceAttributeCode'
        /// </summary>
        [Test]
        public void SourceAttributeCodeTest()
        {
            // TODO unit test for the property 'SourceAttributeCode'
        }
        /// <summary>
        /// Test the property 'IsConfidential'
        /// </summary>
        [Test]
        public void IsConfidentialTest()
        {
            // TODO unit test for the property 'IsConfidential'
        }
        /// <summary>
        /// Test the property 'IsAlwaysEncrypted'
        /// </summary>
        [Test]
        public void IsAlwaysEncryptedTest()
        {
            // TODO unit test for the property 'IsAlwaysEncrypted'
        }

    }

}
